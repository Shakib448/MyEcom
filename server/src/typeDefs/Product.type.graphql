type Reviews {
  name: String
  rating: Float
  comment: String
  user: String
}

type Product {
  id: ID!
  user: String!
  name: String!
  image: String!
  description: String!
  brand: String!
  category: String!
  price: Float!
  countInStock: Int!
  rating: Float!
  reviews: [Reviews!]!
  numReviews: Int!
}

type Query {
  getAllProducts: [Product!]!
}

input ProductContent {
  name: String!
  image: String!
  category: String!
  description: String!
  price: Float!
  countInStock: Int!
  numReviews: Int!
}

interface ProductMutationResponse {
  success: Boolean!
  message: String!
  product: Product
}

type ProductResponse implements ProductMutationResponse {
  success: Boolean!
  message: String!
  product: Product
}

type Mutation {
  createProduct(product: ProductContent!): ProductResponse
}
